
Week3B2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000079c  00000810  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000079c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000870  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000008ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d18  00000000  00000000  00000914  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a61  00000000  00000000  0000162c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000058b  00000000  00000000  0000208d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  00002618  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ab  00000000  00000000  000026f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000029f  00000000  00000000  00002ba3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002e42  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e9       	ldi	r30, 0x9C	; 156
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	58 d0       	rcall	.+176    	; 0x164 <main>
  b4:	71 c3       	rjmp	.+1762   	; 0x798 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <lcd_strobe_lcd_e>:
	{
		PORTC = 0x14;
		lcd_strobe_lcd_e();
		_delay_ms(40);
	}
}
  b8:	ab 9a       	sbi	0x15, 3	; 21
  ba:	89 ef       	ldi	r24, 0xF9	; 249
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <lcd_strobe_lcd_e+0x6>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <lcd_strobe_lcd_e+0xc>
  c4:	00 00       	nop
  c6:	ab 98       	cbi	0x15, 3	; 21
  c8:	89 ef       	ldi	r24, 0xF9	; 249
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <lcd_strobe_lcd_e+0x14>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <lcd_strobe_lcd_e+0x1a>
  d2:	00 00       	nop
  d4:	08 95       	ret

000000d6 <init_lcd_4bit>:
  d6:	cf 93       	push	r28
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	84 bb       	out	0x14, r24	; 20
  dc:	15 ba       	out	0x15, r1	; 21
  de:	c0 e2       	ldi	r28, 0x20	; 32
  e0:	c5 bb       	out	0x15, r28	; 21
  e2:	ea df       	rcall	.-44     	; 0xb8 <lcd_strobe_lcd_e>
  e4:	c5 bb       	out	0x15, r28	; 21
  e6:	e8 df       	rcall	.-48     	; 0xb8 <lcd_strobe_lcd_e>
  e8:	80 e8       	ldi	r24, 0x80	; 128
  ea:	85 bb       	out	0x15, r24	; 21
  ec:	e5 df       	rcall	.-54     	; 0xb8 <lcd_strobe_lcd_e>
  ee:	15 ba       	out	0x15, r1	; 21
  f0:	e3 df       	rcall	.-58     	; 0xb8 <lcd_strobe_lcd_e>
  f2:	80 ef       	ldi	r24, 0xF0	; 240
  f4:	85 bb       	out	0x15, r24	; 21
  f6:	e0 df       	rcall	.-64     	; 0xb8 <lcd_strobe_lcd_e>
  f8:	15 ba       	out	0x15, r1	; 21
  fa:	de df       	rcall	.-68     	; 0xb8 <lcd_strobe_lcd_e>
  fc:	80 e6       	ldi	r24, 0x60	; 96
  fe:	85 bb       	out	0x15, r24	; 21
 100:	db df       	rcall	.-74     	; 0xb8 <lcd_strobe_lcd_e>
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <lcd_write_data>:

void lcd_write_data(unsigned char byte)
{
 106:	cf 93       	push	r28
 108:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 10a:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 10c:	aa 9a       	sbi	0x15, 2	; 21
	lcd_strobe_lcd_e();
 10e:	d4 df       	rcall	.-88     	; 0xb8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 110:	c2 95       	swap	r28
 112:	c0 7f       	andi	r28, 0xF0	; 240
 114:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
 116:	aa 9a       	sbi	0x15, 2	; 21
	lcd_strobe_lcd_e();
 118:	cf df       	rcall	.-98     	; 0xb8 <lcd_strobe_lcd_e>
}
 11a:	cf 91       	pop	r28
 11c:	08 95       	ret

0000011e <display_text>:
	lcd_strobe_lcd_e();

}

void display_text(char *str)
{
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	ec 01       	movw	r28, r24
	lcd_write_data(0x01);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	ef df       	rcall	.-34     	; 0x106 <lcd_write_data>
	
	lcd_write_data(0x02);
 128:	82 e0       	ldi	r24, 0x02	; 2
 12a:	ed df       	rcall	.-38     	; 0x106 <lcd_write_data>
	while(*str)
 12c:	88 81       	ld	r24, Y
 12e:	88 23       	and	r24, r24
 130:	29 f0       	breq	.+10     	; 0x13c <display_text+0x1e>
 132:	21 96       	adiw	r28, 0x01	; 1
	{
		lcd_write_data(*str++);
 134:	e8 df       	rcall	.-48     	; 0x106 <lcd_write_data>
void display_text(char *str)
{
	lcd_write_data(0x01);
	
	lcd_write_data(0x02);
	while(*str)
 136:	89 91       	ld	r24, Y+
 138:	81 11       	cpse	r24, r1
 13a:	fc cf       	rjmp	.-8      	; 0x134 <display_text+0x16>
	{
		lcd_write_data(*str++);
	}
}
 13c:	df 91       	pop	r29
 13e:	cf 91       	pop	r28
 140:	08 95       	ret

00000142 <wait>:
	//display_text(sprintf(str, "%i", timesPressed));	
//}

void wait( int ms )
{
	for (int i=0; i<ms; i++)
 142:	18 16       	cp	r1, r24
 144:	19 06       	cpc	r1, r25
 146:	6c f4       	brge	.+26     	; 0x162 <wait+0x20>
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 14c:	e9 ef       	ldi	r30, 0xF9	; 249
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <wait+0xe>
 154:	00 c0       	rjmp	.+0      	; 0x156 <wait+0x14>
 156:	00 00       	nop
 158:	2f 5f       	subi	r18, 0xFF	; 255
 15a:	3f 4f       	sbci	r19, 0xFF	; 255
 15c:	28 17       	cp	r18, r24
 15e:	39 07       	cpc	r19, r25
 160:	a9 f7       	brne	.-22     	; 0x14c <wait+0xa>
 162:	08 95       	ret

00000164 <main>:
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}

int main(void)
{
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62
 16c:	2f 97       	sbiw	r28, 0x0f	; 15
 16e:	0f b6       	in	r0, 0x3f	; 63
 170:	f8 94       	cli
 172:	de bf       	out	0x3e, r29	; 62
 174:	0f be       	out	0x3f, r0	; 63
 176:	cd bf       	out	0x3d, r28	; 61
	int timesPressed = 0;
	init_lcd_4bit();
 178:	ae df       	rcall	.-164    	; 0xd6 <init_lcd_4bit>

	DDRA = 0xF0;
 17a:	80 ef       	ldi	r24, 0xF0	; 240
 17c:	8a bb       	out	0x1a, r24	; 26

	EICRA |= 0x0B;
 17e:	ea e6       	ldi	r30, 0x6A	; 106
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	8b 60       	ori	r24, 0x0B	; 11
 186:	80 83       	st	Z, r24

	EIMSK |= 0x03;
 188:	89 b7       	in	r24, 0x39	; 57
 18a:	83 60       	ori	r24, 0x03	; 3
 18c:	89 bf       	out	0x39, r24	; 57

	sei();
 18e:	78 94       	sei
	
	DDRD = 0xFC;
 190:	8c ef       	ldi	r24, 0xFC	; 252
 192:	81 bb       	out	0x11, r24	; 17
	}
}

int main(void)
{
	int timesPressed = 0;
 194:	00 e0       	ldi	r16, 0x00	; 0
 196:	10 e0       	ldi	r17, 0x00	; 0
		}
		else if(PIND & 2)
		{
			timesPressed++;
			char str[15];
			sprintf(str, "%d", timesPressed);
 198:	0f 2e       	mov	r0, r31
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	cf 2e       	mov	r12, r31
 19e:	f1 e0       	ldi	r31, 0x01	; 1
 1a0:	df 2e       	mov	r13, r31
 1a2:	f0 2d       	mov	r31, r0
 1a4:	ce 01       	movw	r24, r28
 1a6:	01 96       	adiw	r24, 0x01	; 1
 1a8:	7c 01       	movw	r14, r24
	//display_text("100");
    while (1) 
    {
		//display_text("10000");
		
		if(PIND & 1)
 1aa:	80 9b       	sbis	0x10, 0	; 16
 1ac:	15 c0       	rjmp	.+42     	; 0x1d8 <main+0x74>
		{
			timesPressed--;
 1ae:	01 50       	subi	r16, 0x01	; 1
 1b0:	11 09       	sbc	r17, r1
			//display_text(sprintf(str, "%i", timesPressed));
			char str[15];
			sprintf(str, "%d", timesPressed);
 1b2:	1f 93       	push	r17
 1b4:	0f 93       	push	r16
 1b6:	df 92       	push	r13
 1b8:	cf 92       	push	r12
 1ba:	ff 92       	push	r15
 1bc:	ef 92       	push	r14
 1be:	23 d0       	rcall	.+70     	; 0x206 <sprintf>
			 display_text(str);
 1c0:	c7 01       	movw	r24, r14
 1c2:	ad df       	rcall	.-166    	; 0x11e <display_text>
			wait(250);
 1c4:	8a ef       	ldi	r24, 0xFA	; 250
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	bc df       	rcall	.-136    	; 0x142 <wait>
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	e9 cf       	rjmp	.-46     	; 0x1aa <main+0x46>
		}
		else if(PIND & 2)
 1d8:	81 9b       	sbis	0x10, 1	; 16
 1da:	e7 cf       	rjmp	.-50     	; 0x1aa <main+0x46>
		{
			timesPressed++;
 1dc:	0f 5f       	subi	r16, 0xFF	; 255
 1de:	1f 4f       	sbci	r17, 0xFF	; 255
			char str[15];
			sprintf(str, "%d", timesPressed);
 1e0:	1f 93       	push	r17
 1e2:	0f 93       	push	r16
 1e4:	df 92       	push	r13
 1e6:	cf 92       	push	r12
 1e8:	ff 92       	push	r15
 1ea:	ef 92       	push	r14
 1ec:	0c d0       	rcall	.+24     	; 0x206 <sprintf>
			 display_text(str);
 1ee:	c7 01       	movw	r24, r14
 1f0:	96 df       	rcall	.-212    	; 0x11e <display_text>
			wait(250);
 1f2:	8a ef       	ldi	r24, 0xFA	; 250
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	a5 df       	rcall	.-182    	; 0x142 <wait>
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	d2 cf       	rjmp	.-92     	; 0x1aa <main+0x46>

00000206 <sprintf>:
 206:	0f 93       	push	r16
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	2e 97       	sbiw	r28, 0x0e	; 14
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	0d 89       	ldd	r16, Y+21	; 0x15
 220:	1e 89       	ldd	r17, Y+22	; 0x16
 222:	86 e0       	ldi	r24, 0x06	; 6
 224:	8c 83       	std	Y+4, r24	; 0x04
 226:	1a 83       	std	Y+2, r17	; 0x02
 228:	09 83       	std	Y+1, r16	; 0x01
 22a:	8f ef       	ldi	r24, 0xFF	; 255
 22c:	9f e7       	ldi	r25, 0x7F	; 127
 22e:	9e 83       	std	Y+6, r25	; 0x06
 230:	8d 83       	std	Y+5, r24	; 0x05
 232:	ae 01       	movw	r20, r28
 234:	47 5e       	subi	r20, 0xE7	; 231
 236:	5f 4f       	sbci	r21, 0xFF	; 255
 238:	6f 89       	ldd	r22, Y+23	; 0x17
 23a:	78 8d       	ldd	r23, Y+24	; 0x18
 23c:	ce 01       	movw	r24, r28
 23e:	01 96       	adiw	r24, 0x01	; 1
 240:	11 d0       	rcall	.+34     	; 0x264 <vfprintf>
 242:	2f 81       	ldd	r18, Y+7	; 0x07
 244:	38 85       	ldd	r19, Y+8	; 0x08
 246:	f8 01       	movw	r30, r16
 248:	e2 0f       	add	r30, r18
 24a:	f3 1f       	adc	r31, r19
 24c:	10 82       	st	Z, r1
 24e:	2e 96       	adiw	r28, 0x0e	; 14
 250:	0f b6       	in	r0, 0x3f	; 63
 252:	f8 94       	cli
 254:	de bf       	out	0x3e, r29	; 62
 256:	0f be       	out	0x3f, r0	; 63
 258:	cd bf       	out	0x3d, r28	; 61
 25a:	df 91       	pop	r29
 25c:	cf 91       	pop	r28
 25e:	1f 91       	pop	r17
 260:	0f 91       	pop	r16
 262:	08 95       	ret

00000264 <vfprintf>:
 264:	2f 92       	push	r2
 266:	3f 92       	push	r3
 268:	4f 92       	push	r4
 26a:	5f 92       	push	r5
 26c:	6f 92       	push	r6
 26e:	7f 92       	push	r7
 270:	8f 92       	push	r8
 272:	9f 92       	push	r9
 274:	af 92       	push	r10
 276:	bf 92       	push	r11
 278:	cf 92       	push	r12
 27a:	df 92       	push	r13
 27c:	ef 92       	push	r14
 27e:	ff 92       	push	r15
 280:	0f 93       	push	r16
 282:	1f 93       	push	r17
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	cd b7       	in	r28, 0x3d	; 61
 28a:	de b7       	in	r29, 0x3e	; 62
 28c:	2c 97       	sbiw	r28, 0x0c	; 12
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	7c 01       	movw	r14, r24
 29a:	6b 01       	movw	r12, r22
 29c:	8a 01       	movw	r16, r20
 29e:	fc 01       	movw	r30, r24
 2a0:	17 82       	std	Z+7, r1	; 0x07
 2a2:	16 82       	std	Z+6, r1	; 0x06
 2a4:	83 81       	ldd	r24, Z+3	; 0x03
 2a6:	81 ff       	sbrs	r24, 1
 2a8:	b0 c1       	rjmp	.+864    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 2aa:	ce 01       	movw	r24, r28
 2ac:	01 96       	adiw	r24, 0x01	; 1
 2ae:	4c 01       	movw	r8, r24
 2b0:	f7 01       	movw	r30, r14
 2b2:	93 81       	ldd	r25, Z+3	; 0x03
 2b4:	f6 01       	movw	r30, r12
 2b6:	93 fd       	sbrc	r25, 3
 2b8:	85 91       	lpm	r24, Z+
 2ba:	93 ff       	sbrs	r25, 3
 2bc:	81 91       	ld	r24, Z+
 2be:	6f 01       	movw	r12, r30
 2c0:	88 23       	and	r24, r24
 2c2:	09 f4       	brne	.+2      	; 0x2c6 <vfprintf+0x62>
 2c4:	9e c1       	rjmp	.+828    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 2c6:	85 32       	cpi	r24, 0x25	; 37
 2c8:	39 f4       	brne	.+14     	; 0x2d8 <vfprintf+0x74>
 2ca:	93 fd       	sbrc	r25, 3
 2cc:	85 91       	lpm	r24, Z+
 2ce:	93 ff       	sbrs	r25, 3
 2d0:	81 91       	ld	r24, Z+
 2d2:	6f 01       	movw	r12, r30
 2d4:	85 32       	cpi	r24, 0x25	; 37
 2d6:	21 f4       	brne	.+8      	; 0x2e0 <vfprintf+0x7c>
 2d8:	b7 01       	movw	r22, r14
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	c7 d1       	rcall	.+910    	; 0x66c <fputc>
 2de:	e8 cf       	rjmp	.-48     	; 0x2b0 <vfprintf+0x4c>
 2e0:	51 2c       	mov	r5, r1
 2e2:	31 2c       	mov	r3, r1
 2e4:	20 e0       	ldi	r18, 0x00	; 0
 2e6:	20 32       	cpi	r18, 0x20	; 32
 2e8:	a0 f4       	brcc	.+40     	; 0x312 <vfprintf+0xae>
 2ea:	8b 32       	cpi	r24, 0x2B	; 43
 2ec:	69 f0       	breq	.+26     	; 0x308 <vfprintf+0xa4>
 2ee:	30 f4       	brcc	.+12     	; 0x2fc <vfprintf+0x98>
 2f0:	80 32       	cpi	r24, 0x20	; 32
 2f2:	59 f0       	breq	.+22     	; 0x30a <vfprintf+0xa6>
 2f4:	83 32       	cpi	r24, 0x23	; 35
 2f6:	69 f4       	brne	.+26     	; 0x312 <vfprintf+0xae>
 2f8:	20 61       	ori	r18, 0x10	; 16
 2fa:	2c c0       	rjmp	.+88     	; 0x354 <vfprintf+0xf0>
 2fc:	8d 32       	cpi	r24, 0x2D	; 45
 2fe:	39 f0       	breq	.+14     	; 0x30e <vfprintf+0xaa>
 300:	80 33       	cpi	r24, 0x30	; 48
 302:	39 f4       	brne	.+14     	; 0x312 <vfprintf+0xae>
 304:	21 60       	ori	r18, 0x01	; 1
 306:	26 c0       	rjmp	.+76     	; 0x354 <vfprintf+0xf0>
 308:	22 60       	ori	r18, 0x02	; 2
 30a:	24 60       	ori	r18, 0x04	; 4
 30c:	23 c0       	rjmp	.+70     	; 0x354 <vfprintf+0xf0>
 30e:	28 60       	ori	r18, 0x08	; 8
 310:	21 c0       	rjmp	.+66     	; 0x354 <vfprintf+0xf0>
 312:	27 fd       	sbrc	r18, 7
 314:	27 c0       	rjmp	.+78     	; 0x364 <vfprintf+0x100>
 316:	30 ed       	ldi	r19, 0xD0	; 208
 318:	38 0f       	add	r19, r24
 31a:	3a 30       	cpi	r19, 0x0A	; 10
 31c:	78 f4       	brcc	.+30     	; 0x33c <vfprintf+0xd8>
 31e:	26 ff       	sbrs	r18, 6
 320:	06 c0       	rjmp	.+12     	; 0x32e <vfprintf+0xca>
 322:	fa e0       	ldi	r31, 0x0A	; 10
 324:	5f 9e       	mul	r5, r31
 326:	30 0d       	add	r19, r0
 328:	11 24       	eor	r1, r1
 32a:	53 2e       	mov	r5, r19
 32c:	13 c0       	rjmp	.+38     	; 0x354 <vfprintf+0xf0>
 32e:	8a e0       	ldi	r24, 0x0A	; 10
 330:	38 9e       	mul	r3, r24
 332:	30 0d       	add	r19, r0
 334:	11 24       	eor	r1, r1
 336:	33 2e       	mov	r3, r19
 338:	20 62       	ori	r18, 0x20	; 32
 33a:	0c c0       	rjmp	.+24     	; 0x354 <vfprintf+0xf0>
 33c:	8e 32       	cpi	r24, 0x2E	; 46
 33e:	21 f4       	brne	.+8      	; 0x348 <vfprintf+0xe4>
 340:	26 fd       	sbrc	r18, 6
 342:	5f c1       	rjmp	.+702    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 344:	20 64       	ori	r18, 0x40	; 64
 346:	06 c0       	rjmp	.+12     	; 0x354 <vfprintf+0xf0>
 348:	8c 36       	cpi	r24, 0x6C	; 108
 34a:	11 f4       	brne	.+4      	; 0x350 <vfprintf+0xec>
 34c:	20 68       	ori	r18, 0x80	; 128
 34e:	02 c0       	rjmp	.+4      	; 0x354 <vfprintf+0xf0>
 350:	88 36       	cpi	r24, 0x68	; 104
 352:	41 f4       	brne	.+16     	; 0x364 <vfprintf+0x100>
 354:	f6 01       	movw	r30, r12
 356:	93 fd       	sbrc	r25, 3
 358:	85 91       	lpm	r24, Z+
 35a:	93 ff       	sbrs	r25, 3
 35c:	81 91       	ld	r24, Z+
 35e:	6f 01       	movw	r12, r30
 360:	81 11       	cpse	r24, r1
 362:	c1 cf       	rjmp	.-126    	; 0x2e6 <vfprintf+0x82>
 364:	98 2f       	mov	r25, r24
 366:	9f 7d       	andi	r25, 0xDF	; 223
 368:	95 54       	subi	r25, 0x45	; 69
 36a:	93 30       	cpi	r25, 0x03	; 3
 36c:	28 f4       	brcc	.+10     	; 0x378 <vfprintf+0x114>
 36e:	0c 5f       	subi	r16, 0xFC	; 252
 370:	1f 4f       	sbci	r17, 0xFF	; 255
 372:	ff e3       	ldi	r31, 0x3F	; 63
 374:	f9 83       	std	Y+1, r31	; 0x01
 376:	0d c0       	rjmp	.+26     	; 0x392 <vfprintf+0x12e>
 378:	83 36       	cpi	r24, 0x63	; 99
 37a:	31 f0       	breq	.+12     	; 0x388 <vfprintf+0x124>
 37c:	83 37       	cpi	r24, 0x73	; 115
 37e:	71 f0       	breq	.+28     	; 0x39c <vfprintf+0x138>
 380:	83 35       	cpi	r24, 0x53	; 83
 382:	09 f0       	breq	.+2      	; 0x386 <vfprintf+0x122>
 384:	57 c0       	rjmp	.+174    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 386:	21 c0       	rjmp	.+66     	; 0x3ca <vfprintf+0x166>
 388:	f8 01       	movw	r30, r16
 38a:	80 81       	ld	r24, Z
 38c:	89 83       	std	Y+1, r24	; 0x01
 38e:	0e 5f       	subi	r16, 0xFE	; 254
 390:	1f 4f       	sbci	r17, 0xFF	; 255
 392:	44 24       	eor	r4, r4
 394:	43 94       	inc	r4
 396:	51 2c       	mov	r5, r1
 398:	54 01       	movw	r10, r8
 39a:	14 c0       	rjmp	.+40     	; 0x3c4 <vfprintf+0x160>
 39c:	38 01       	movw	r6, r16
 39e:	f2 e0       	ldi	r31, 0x02	; 2
 3a0:	6f 0e       	add	r6, r31
 3a2:	71 1c       	adc	r7, r1
 3a4:	f8 01       	movw	r30, r16
 3a6:	a0 80       	ld	r10, Z
 3a8:	b1 80       	ldd	r11, Z+1	; 0x01
 3aa:	26 ff       	sbrs	r18, 6
 3ac:	03 c0       	rjmp	.+6      	; 0x3b4 <vfprintf+0x150>
 3ae:	65 2d       	mov	r22, r5
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <vfprintf+0x154>
 3b4:	6f ef       	ldi	r22, 0xFF	; 255
 3b6:	7f ef       	ldi	r23, 0xFF	; 255
 3b8:	c5 01       	movw	r24, r10
 3ba:	2c 87       	std	Y+12, r18	; 0x0c
 3bc:	4c d1       	rcall	.+664    	; 0x656 <strnlen>
 3be:	2c 01       	movw	r4, r24
 3c0:	83 01       	movw	r16, r6
 3c2:	2c 85       	ldd	r18, Y+12	; 0x0c
 3c4:	2f 77       	andi	r18, 0x7F	; 127
 3c6:	22 2e       	mov	r2, r18
 3c8:	16 c0       	rjmp	.+44     	; 0x3f6 <vfprintf+0x192>
 3ca:	38 01       	movw	r6, r16
 3cc:	f2 e0       	ldi	r31, 0x02	; 2
 3ce:	6f 0e       	add	r6, r31
 3d0:	71 1c       	adc	r7, r1
 3d2:	f8 01       	movw	r30, r16
 3d4:	a0 80       	ld	r10, Z
 3d6:	b1 80       	ldd	r11, Z+1	; 0x01
 3d8:	26 ff       	sbrs	r18, 6
 3da:	03 c0       	rjmp	.+6      	; 0x3e2 <vfprintf+0x17e>
 3dc:	65 2d       	mov	r22, r5
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <vfprintf+0x182>
 3e2:	6f ef       	ldi	r22, 0xFF	; 255
 3e4:	7f ef       	ldi	r23, 0xFF	; 255
 3e6:	c5 01       	movw	r24, r10
 3e8:	2c 87       	std	Y+12, r18	; 0x0c
 3ea:	2a d1       	rcall	.+596    	; 0x640 <strnlen_P>
 3ec:	2c 01       	movw	r4, r24
 3ee:	2c 85       	ldd	r18, Y+12	; 0x0c
 3f0:	20 68       	ori	r18, 0x80	; 128
 3f2:	22 2e       	mov	r2, r18
 3f4:	83 01       	movw	r16, r6
 3f6:	23 fc       	sbrc	r2, 3
 3f8:	19 c0       	rjmp	.+50     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3fa:	83 2d       	mov	r24, r3
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	48 16       	cp	r4, r24
 400:	59 06       	cpc	r5, r25
 402:	a0 f4       	brcc	.+40     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 404:	b7 01       	movw	r22, r14
 406:	80 e2       	ldi	r24, 0x20	; 32
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	30 d1       	rcall	.+608    	; 0x66c <fputc>
 40c:	3a 94       	dec	r3
 40e:	f5 cf       	rjmp	.-22     	; 0x3fa <vfprintf+0x196>
 410:	f5 01       	movw	r30, r10
 412:	27 fc       	sbrc	r2, 7
 414:	85 91       	lpm	r24, Z+
 416:	27 fe       	sbrs	r2, 7
 418:	81 91       	ld	r24, Z+
 41a:	5f 01       	movw	r10, r30
 41c:	b7 01       	movw	r22, r14
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	25 d1       	rcall	.+586    	; 0x66c <fputc>
 422:	31 10       	cpse	r3, r1
 424:	3a 94       	dec	r3
 426:	f1 e0       	ldi	r31, 0x01	; 1
 428:	4f 1a       	sub	r4, r31
 42a:	51 08       	sbc	r5, r1
 42c:	41 14       	cp	r4, r1
 42e:	51 04       	cpc	r5, r1
 430:	79 f7       	brne	.-34     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 432:	de c0       	rjmp	.+444    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 434:	84 36       	cpi	r24, 0x64	; 100
 436:	11 f0       	breq	.+4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 438:	89 36       	cpi	r24, 0x69	; 105
 43a:	31 f5       	brne	.+76     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 43c:	f8 01       	movw	r30, r16
 43e:	27 ff       	sbrs	r18, 7
 440:	07 c0       	rjmp	.+14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 442:	60 81       	ld	r22, Z
 444:	71 81       	ldd	r23, Z+1	; 0x01
 446:	82 81       	ldd	r24, Z+2	; 0x02
 448:	93 81       	ldd	r25, Z+3	; 0x03
 44a:	0c 5f       	subi	r16, 0xFC	; 252
 44c:	1f 4f       	sbci	r17, 0xFF	; 255
 44e:	08 c0       	rjmp	.+16     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 450:	60 81       	ld	r22, Z
 452:	71 81       	ldd	r23, Z+1	; 0x01
 454:	07 2e       	mov	r0, r23
 456:	00 0c       	add	r0, r0
 458:	88 0b       	sbc	r24, r24
 45a:	99 0b       	sbc	r25, r25
 45c:	0e 5f       	subi	r16, 0xFE	; 254
 45e:	1f 4f       	sbci	r17, 0xFF	; 255
 460:	2f 76       	andi	r18, 0x6F	; 111
 462:	72 2e       	mov	r7, r18
 464:	97 ff       	sbrs	r25, 7
 466:	09 c0       	rjmp	.+18     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 468:	90 95       	com	r25
 46a:	80 95       	com	r24
 46c:	70 95       	com	r23
 46e:	61 95       	neg	r22
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	20 68       	ori	r18, 0x80	; 128
 478:	72 2e       	mov	r7, r18
 47a:	2a e0       	ldi	r18, 0x0A	; 10
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	a4 01       	movw	r20, r8
 480:	2d d1       	rcall	.+602    	; 0x6dc <__ultoa_invert>
 482:	a8 2e       	mov	r10, r24
 484:	a8 18       	sub	r10, r8
 486:	43 c0       	rjmp	.+134    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 488:	85 37       	cpi	r24, 0x75	; 117
 48a:	29 f4       	brne	.+10     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 48c:	2f 7e       	andi	r18, 0xEF	; 239
 48e:	b2 2e       	mov	r11, r18
 490:	2a e0       	ldi	r18, 0x0A	; 10
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	25 c0       	rjmp	.+74     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 496:	f2 2f       	mov	r31, r18
 498:	f9 7f       	andi	r31, 0xF9	; 249
 49a:	bf 2e       	mov	r11, r31
 49c:	8f 36       	cpi	r24, 0x6F	; 111
 49e:	c1 f0       	breq	.+48     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4a0:	18 f4       	brcc	.+6      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a2:	88 35       	cpi	r24, 0x58	; 88
 4a4:	79 f0       	breq	.+30     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4a6:	ad c0       	rjmp	.+346    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 4a8:	80 37       	cpi	r24, 0x70	; 112
 4aa:	19 f0       	breq	.+6      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4ac:	88 37       	cpi	r24, 0x78	; 120
 4ae:	21 f0       	breq	.+8      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4b0:	a8 c0       	rjmp	.+336    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 4b2:	2f 2f       	mov	r18, r31
 4b4:	20 61       	ori	r18, 0x10	; 16
 4b6:	b2 2e       	mov	r11, r18
 4b8:	b4 fe       	sbrs	r11, 4
 4ba:	0d c0       	rjmp	.+26     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4bc:	8b 2d       	mov	r24, r11
 4be:	84 60       	ori	r24, 0x04	; 4
 4c0:	b8 2e       	mov	r11, r24
 4c2:	09 c0       	rjmp	.+18     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4c4:	24 ff       	sbrs	r18, 4
 4c6:	0a c0       	rjmp	.+20     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4c8:	9f 2f       	mov	r25, r31
 4ca:	96 60       	ori	r25, 0x06	; 6
 4cc:	b9 2e       	mov	r11, r25
 4ce:	06 c0       	rjmp	.+12     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d0:	28 e0       	ldi	r18, 0x08	; 8
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	05 c0       	rjmp	.+10     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d6:	20 e1       	ldi	r18, 0x10	; 16
 4d8:	30 e0       	ldi	r19, 0x00	; 0
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4dc:	20 e1       	ldi	r18, 0x10	; 16
 4de:	32 e0       	ldi	r19, 0x02	; 2
 4e0:	f8 01       	movw	r30, r16
 4e2:	b7 fe       	sbrs	r11, 7
 4e4:	07 c0       	rjmp	.+14     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e6:	60 81       	ld	r22, Z
 4e8:	71 81       	ldd	r23, Z+1	; 0x01
 4ea:	82 81       	ldd	r24, Z+2	; 0x02
 4ec:	93 81       	ldd	r25, Z+3	; 0x03
 4ee:	0c 5f       	subi	r16, 0xFC	; 252
 4f0:	1f 4f       	sbci	r17, 0xFF	; 255
 4f2:	06 c0       	rjmp	.+12     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4f4:	60 81       	ld	r22, Z
 4f6:	71 81       	ldd	r23, Z+1	; 0x01
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	0e 5f       	subi	r16, 0xFE	; 254
 4fe:	1f 4f       	sbci	r17, 0xFF	; 255
 500:	a4 01       	movw	r20, r8
 502:	ec d0       	rcall	.+472    	; 0x6dc <__ultoa_invert>
 504:	a8 2e       	mov	r10, r24
 506:	a8 18       	sub	r10, r8
 508:	fb 2d       	mov	r31, r11
 50a:	ff 77       	andi	r31, 0x7F	; 127
 50c:	7f 2e       	mov	r7, r31
 50e:	76 fe       	sbrs	r7, 6
 510:	0b c0       	rjmp	.+22     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 512:	37 2d       	mov	r19, r7
 514:	3e 7f       	andi	r19, 0xFE	; 254
 516:	a5 14       	cp	r10, r5
 518:	50 f4       	brcc	.+20     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 51a:	74 fe       	sbrs	r7, 4
 51c:	0a c0       	rjmp	.+20     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 51e:	72 fc       	sbrc	r7, 2
 520:	08 c0       	rjmp	.+16     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 522:	37 2d       	mov	r19, r7
 524:	3e 7e       	andi	r19, 0xEE	; 238
 526:	05 c0       	rjmp	.+10     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 528:	ba 2c       	mov	r11, r10
 52a:	37 2d       	mov	r19, r7
 52c:	03 c0       	rjmp	.+6      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 52e:	ba 2c       	mov	r11, r10
 530:	01 c0       	rjmp	.+2      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 532:	b5 2c       	mov	r11, r5
 534:	34 ff       	sbrs	r19, 4
 536:	0d c0       	rjmp	.+26     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 538:	fe 01       	movw	r30, r28
 53a:	ea 0d       	add	r30, r10
 53c:	f1 1d       	adc	r31, r1
 53e:	80 81       	ld	r24, Z
 540:	80 33       	cpi	r24, 0x30	; 48
 542:	11 f4       	brne	.+4      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 544:	39 7e       	andi	r19, 0xE9	; 233
 546:	09 c0       	rjmp	.+18     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 548:	32 ff       	sbrs	r19, 2
 54a:	06 c0       	rjmp	.+12     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 54c:	b3 94       	inc	r11
 54e:	b3 94       	inc	r11
 550:	04 c0       	rjmp	.+8      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 552:	83 2f       	mov	r24, r19
 554:	86 78       	andi	r24, 0x86	; 134
 556:	09 f0       	breq	.+2      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 558:	b3 94       	inc	r11
 55a:	33 fd       	sbrc	r19, 3
 55c:	12 c0       	rjmp	.+36     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 55e:	30 ff       	sbrs	r19, 0
 560:	06 c0       	rjmp	.+12     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 562:	5a 2c       	mov	r5, r10
 564:	b3 14       	cp	r11, r3
 566:	18 f4       	brcc	.+6      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 568:	53 0c       	add	r5, r3
 56a:	5b 18       	sub	r5, r11
 56c:	b3 2c       	mov	r11, r3
 56e:	b3 14       	cp	r11, r3
 570:	60 f4       	brcc	.+24     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 572:	b7 01       	movw	r22, r14
 574:	80 e2       	ldi	r24, 0x20	; 32
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	3c 87       	std	Y+12, r19	; 0x0c
 57a:	78 d0       	rcall	.+240    	; 0x66c <fputc>
 57c:	b3 94       	inc	r11
 57e:	3c 85       	ldd	r19, Y+12	; 0x0c
 580:	f6 cf       	rjmp	.-20     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 582:	b3 14       	cp	r11, r3
 584:	10 f4       	brcc	.+4      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 586:	3b 18       	sub	r3, r11
 588:	01 c0       	rjmp	.+2      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 58a:	31 2c       	mov	r3, r1
 58c:	34 ff       	sbrs	r19, 4
 58e:	11 c0       	rjmp	.+34     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 590:	b7 01       	movw	r22, r14
 592:	80 e3       	ldi	r24, 0x30	; 48
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	3c 87       	std	Y+12, r19	; 0x0c
 598:	69 d0       	rcall	.+210    	; 0x66c <fputc>
 59a:	3c 85       	ldd	r19, Y+12	; 0x0c
 59c:	32 ff       	sbrs	r19, 2
 59e:	16 c0       	rjmp	.+44     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5a0:	31 fd       	sbrc	r19, 1
 5a2:	03 c0       	rjmp	.+6      	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5a4:	88 e7       	ldi	r24, 0x78	; 120
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5aa:	88 e5       	ldi	r24, 0x58	; 88
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	b7 01       	movw	r22, r14
 5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5b2:	83 2f       	mov	r24, r19
 5b4:	86 78       	andi	r24, 0x86	; 134
 5b6:	51 f0       	breq	.+20     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5b8:	31 ff       	sbrs	r19, 1
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5bc:	8b e2       	ldi	r24, 0x2B	; 43
 5be:	01 c0       	rjmp	.+2      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5c0:	80 e2       	ldi	r24, 0x20	; 32
 5c2:	37 fd       	sbrc	r19, 7
 5c4:	8d e2       	ldi	r24, 0x2D	; 45
 5c6:	b7 01       	movw	r22, r14
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	50 d0       	rcall	.+160    	; 0x66c <fputc>
 5cc:	a5 14       	cp	r10, r5
 5ce:	30 f4       	brcc	.+12     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5d0:	b7 01       	movw	r22, r14
 5d2:	80 e3       	ldi	r24, 0x30	; 48
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	4a d0       	rcall	.+148    	; 0x66c <fputc>
 5d8:	5a 94       	dec	r5
 5da:	f8 cf       	rjmp	.-16     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5dc:	aa 94       	dec	r10
 5de:	f4 01       	movw	r30, r8
 5e0:	ea 0d       	add	r30, r10
 5e2:	f1 1d       	adc	r31, r1
 5e4:	80 81       	ld	r24, Z
 5e6:	b7 01       	movw	r22, r14
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	40 d0       	rcall	.+128    	; 0x66c <fputc>
 5ec:	a1 10       	cpse	r10, r1
 5ee:	f6 cf       	rjmp	.-20     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5f0:	33 20       	and	r3, r3
 5f2:	09 f4       	brne	.+2      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f4:	5d ce       	rjmp	.-838    	; 0x2b0 <vfprintf+0x4c>
 5f6:	b7 01       	movw	r22, r14
 5f8:	80 e2       	ldi	r24, 0x20	; 32
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	37 d0       	rcall	.+110    	; 0x66c <fputc>
 5fe:	3a 94       	dec	r3
 600:	f7 cf       	rjmp	.-18     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 602:	f7 01       	movw	r30, r14
 604:	86 81       	ldd	r24, Z+6	; 0x06
 606:	97 81       	ldd	r25, Z+7	; 0x07
 608:	02 c0       	rjmp	.+4      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 60a:	8f ef       	ldi	r24, 0xFF	; 255
 60c:	9f ef       	ldi	r25, 0xFF	; 255
 60e:	2c 96       	adiw	r28, 0x0c	; 12
 610:	0f b6       	in	r0, 0x3f	; 63
 612:	f8 94       	cli
 614:	de bf       	out	0x3e, r29	; 62
 616:	0f be       	out	0x3f, r0	; 63
 618:	cd bf       	out	0x3d, r28	; 61
 61a:	df 91       	pop	r29
 61c:	cf 91       	pop	r28
 61e:	1f 91       	pop	r17
 620:	0f 91       	pop	r16
 622:	ff 90       	pop	r15
 624:	ef 90       	pop	r14
 626:	df 90       	pop	r13
 628:	cf 90       	pop	r12
 62a:	bf 90       	pop	r11
 62c:	af 90       	pop	r10
 62e:	9f 90       	pop	r9
 630:	8f 90       	pop	r8
 632:	7f 90       	pop	r7
 634:	6f 90       	pop	r6
 636:	5f 90       	pop	r5
 638:	4f 90       	pop	r4
 63a:	3f 90       	pop	r3
 63c:	2f 90       	pop	r2
 63e:	08 95       	ret

00000640 <strnlen_P>:
 640:	fc 01       	movw	r30, r24
 642:	05 90       	lpm	r0, Z+
 644:	61 50       	subi	r22, 0x01	; 1
 646:	70 40       	sbci	r23, 0x00	; 0
 648:	01 10       	cpse	r0, r1
 64a:	d8 f7       	brcc	.-10     	; 0x642 <strnlen_P+0x2>
 64c:	80 95       	com	r24
 64e:	90 95       	com	r25
 650:	8e 0f       	add	r24, r30
 652:	9f 1f       	adc	r25, r31
 654:	08 95       	ret

00000656 <strnlen>:
 656:	fc 01       	movw	r30, r24
 658:	61 50       	subi	r22, 0x01	; 1
 65a:	70 40       	sbci	r23, 0x00	; 0
 65c:	01 90       	ld	r0, Z+
 65e:	01 10       	cpse	r0, r1
 660:	d8 f7       	brcc	.-10     	; 0x658 <strnlen+0x2>
 662:	80 95       	com	r24
 664:	90 95       	com	r25
 666:	8e 0f       	add	r24, r30
 668:	9f 1f       	adc	r25, r31
 66a:	08 95       	ret

0000066c <fputc>:
 66c:	0f 93       	push	r16
 66e:	1f 93       	push	r17
 670:	cf 93       	push	r28
 672:	df 93       	push	r29
 674:	fb 01       	movw	r30, r22
 676:	23 81       	ldd	r18, Z+3	; 0x03
 678:	21 fd       	sbrc	r18, 1
 67a:	03 c0       	rjmp	.+6      	; 0x682 <fputc+0x16>
 67c:	8f ef       	ldi	r24, 0xFF	; 255
 67e:	9f ef       	ldi	r25, 0xFF	; 255
 680:	28 c0       	rjmp	.+80     	; 0x6d2 <fputc+0x66>
 682:	22 ff       	sbrs	r18, 2
 684:	16 c0       	rjmp	.+44     	; 0x6b2 <fputc+0x46>
 686:	46 81       	ldd	r20, Z+6	; 0x06
 688:	57 81       	ldd	r21, Z+7	; 0x07
 68a:	24 81       	ldd	r18, Z+4	; 0x04
 68c:	35 81       	ldd	r19, Z+5	; 0x05
 68e:	42 17       	cp	r20, r18
 690:	53 07       	cpc	r21, r19
 692:	44 f4       	brge	.+16     	; 0x6a4 <fputc+0x38>
 694:	a0 81       	ld	r26, Z
 696:	b1 81       	ldd	r27, Z+1	; 0x01
 698:	9d 01       	movw	r18, r26
 69a:	2f 5f       	subi	r18, 0xFF	; 255
 69c:	3f 4f       	sbci	r19, 0xFF	; 255
 69e:	31 83       	std	Z+1, r19	; 0x01
 6a0:	20 83       	st	Z, r18
 6a2:	8c 93       	st	X, r24
 6a4:	26 81       	ldd	r18, Z+6	; 0x06
 6a6:	37 81       	ldd	r19, Z+7	; 0x07
 6a8:	2f 5f       	subi	r18, 0xFF	; 255
 6aa:	3f 4f       	sbci	r19, 0xFF	; 255
 6ac:	37 83       	std	Z+7, r19	; 0x07
 6ae:	26 83       	std	Z+6, r18	; 0x06
 6b0:	10 c0       	rjmp	.+32     	; 0x6d2 <fputc+0x66>
 6b2:	eb 01       	movw	r28, r22
 6b4:	09 2f       	mov	r16, r25
 6b6:	18 2f       	mov	r17, r24
 6b8:	00 84       	ldd	r0, Z+8	; 0x08
 6ba:	f1 85       	ldd	r31, Z+9	; 0x09
 6bc:	e0 2d       	mov	r30, r0
 6be:	09 95       	icall
 6c0:	89 2b       	or	r24, r25
 6c2:	e1 f6       	brne	.-72     	; 0x67c <fputc+0x10>
 6c4:	8e 81       	ldd	r24, Y+6	; 0x06
 6c6:	9f 81       	ldd	r25, Y+7	; 0x07
 6c8:	01 96       	adiw	r24, 0x01	; 1
 6ca:	9f 83       	std	Y+7, r25	; 0x07
 6cc:	8e 83       	std	Y+6, r24	; 0x06
 6ce:	81 2f       	mov	r24, r17
 6d0:	90 2f       	mov	r25, r16
 6d2:	df 91       	pop	r29
 6d4:	cf 91       	pop	r28
 6d6:	1f 91       	pop	r17
 6d8:	0f 91       	pop	r16
 6da:	08 95       	ret

000006dc <__ultoa_invert>:
 6dc:	fa 01       	movw	r30, r20
 6de:	aa 27       	eor	r26, r26
 6e0:	28 30       	cpi	r18, 0x08	; 8
 6e2:	51 f1       	breq	.+84     	; 0x738 <__ultoa_invert+0x5c>
 6e4:	20 31       	cpi	r18, 0x10	; 16
 6e6:	81 f1       	breq	.+96     	; 0x748 <__ultoa_invert+0x6c>
 6e8:	e8 94       	clt
 6ea:	6f 93       	push	r22
 6ec:	6e 7f       	andi	r22, 0xFE	; 254
 6ee:	6e 5f       	subi	r22, 0xFE	; 254
 6f0:	7f 4f       	sbci	r23, 0xFF	; 255
 6f2:	8f 4f       	sbci	r24, 0xFF	; 255
 6f4:	9f 4f       	sbci	r25, 0xFF	; 255
 6f6:	af 4f       	sbci	r26, 0xFF	; 255
 6f8:	b1 e0       	ldi	r27, 0x01	; 1
 6fa:	3e d0       	rcall	.+124    	; 0x778 <__ultoa_invert+0x9c>
 6fc:	b4 e0       	ldi	r27, 0x04	; 4
 6fe:	3c d0       	rcall	.+120    	; 0x778 <__ultoa_invert+0x9c>
 700:	67 0f       	add	r22, r23
 702:	78 1f       	adc	r23, r24
 704:	89 1f       	adc	r24, r25
 706:	9a 1f       	adc	r25, r26
 708:	a1 1d       	adc	r26, r1
 70a:	68 0f       	add	r22, r24
 70c:	79 1f       	adc	r23, r25
 70e:	8a 1f       	adc	r24, r26
 710:	91 1d       	adc	r25, r1
 712:	a1 1d       	adc	r26, r1
 714:	6a 0f       	add	r22, r26
 716:	71 1d       	adc	r23, r1
 718:	81 1d       	adc	r24, r1
 71a:	91 1d       	adc	r25, r1
 71c:	a1 1d       	adc	r26, r1
 71e:	20 d0       	rcall	.+64     	; 0x760 <__ultoa_invert+0x84>
 720:	09 f4       	brne	.+2      	; 0x724 <__ultoa_invert+0x48>
 722:	68 94       	set
 724:	3f 91       	pop	r19
 726:	2a e0       	ldi	r18, 0x0A	; 10
 728:	26 9f       	mul	r18, r22
 72a:	11 24       	eor	r1, r1
 72c:	30 19       	sub	r19, r0
 72e:	30 5d       	subi	r19, 0xD0	; 208
 730:	31 93       	st	Z+, r19
 732:	de f6       	brtc	.-74     	; 0x6ea <__ultoa_invert+0xe>
 734:	cf 01       	movw	r24, r30
 736:	08 95       	ret
 738:	46 2f       	mov	r20, r22
 73a:	47 70       	andi	r20, 0x07	; 7
 73c:	40 5d       	subi	r20, 0xD0	; 208
 73e:	41 93       	st	Z+, r20
 740:	b3 e0       	ldi	r27, 0x03	; 3
 742:	0f d0       	rcall	.+30     	; 0x762 <__ultoa_invert+0x86>
 744:	c9 f7       	brne	.-14     	; 0x738 <__ultoa_invert+0x5c>
 746:	f6 cf       	rjmp	.-20     	; 0x734 <__ultoa_invert+0x58>
 748:	46 2f       	mov	r20, r22
 74a:	4f 70       	andi	r20, 0x0F	; 15
 74c:	40 5d       	subi	r20, 0xD0	; 208
 74e:	4a 33       	cpi	r20, 0x3A	; 58
 750:	18 f0       	brcs	.+6      	; 0x758 <__ultoa_invert+0x7c>
 752:	49 5d       	subi	r20, 0xD9	; 217
 754:	31 fd       	sbrc	r19, 1
 756:	40 52       	subi	r20, 0x20	; 32
 758:	41 93       	st	Z+, r20
 75a:	02 d0       	rcall	.+4      	; 0x760 <__ultoa_invert+0x84>
 75c:	a9 f7       	brne	.-22     	; 0x748 <__ultoa_invert+0x6c>
 75e:	ea cf       	rjmp	.-44     	; 0x734 <__ultoa_invert+0x58>
 760:	b4 e0       	ldi	r27, 0x04	; 4
 762:	a6 95       	lsr	r26
 764:	97 95       	ror	r25
 766:	87 95       	ror	r24
 768:	77 95       	ror	r23
 76a:	67 95       	ror	r22
 76c:	ba 95       	dec	r27
 76e:	c9 f7       	brne	.-14     	; 0x762 <__ultoa_invert+0x86>
 770:	00 97       	sbiw	r24, 0x00	; 0
 772:	61 05       	cpc	r22, r1
 774:	71 05       	cpc	r23, r1
 776:	08 95       	ret
 778:	9b 01       	movw	r18, r22
 77a:	ac 01       	movw	r20, r24
 77c:	0a 2e       	mov	r0, r26
 77e:	06 94       	lsr	r0
 780:	57 95       	ror	r21
 782:	47 95       	ror	r20
 784:	37 95       	ror	r19
 786:	27 95       	ror	r18
 788:	ba 95       	dec	r27
 78a:	c9 f7       	brne	.-14     	; 0x77e <__ultoa_invert+0xa2>
 78c:	62 0f       	add	r22, r18
 78e:	73 1f       	adc	r23, r19
 790:	84 1f       	adc	r24, r20
 792:	95 1f       	adc	r25, r21
 794:	a0 1d       	adc	r26, r0
 796:	08 95       	ret

00000798 <_exit>:
 798:	f8 94       	cli

0000079a <__stop_program>:
 79a:	ff cf       	rjmp	.-2      	; 0x79a <__stop_program>
